#!/bin/sh -e

case ${LANG} in
  *eo*)
    MSG_ERROR="[FATALA] eksportu CONFIG_DOTS_REPO al dotfile-a deponejo kaj reprovu."
    MSG_PUSH="alŝuti dosierojn"
    MSH_PUSH_GIT="aŭtomate ĝisdatiginta far linkie"
    MSG_PUSH_FAIL="nenio por alŝuti"
    MSG_RELINK="religado"
    MSG_RELINK_FAIL="malsukcesis ĉe"
    MSG_END="farita"
    MSG_SELFUP_CURRENT="antaŭa binaro"
    MSG_SELFUP_UPDATED="ĝisdatiganta binaro"
    MSG_SELFUP_UP="ĝisdatiginta"
  ;;
  *)
    MSG_ERROR="[FATAL] export CONFIG_DOTS_REPO to a dotfile repository and retry."
    MSG_PUSH="pushing changes"
    MSG_PUSH_GIT="automatically updated by linkie"
    MSG_PUSH_FAIL="nothing to push"
    MSG_RELINK="relinking"
    MSG_RELINK_FAIL="failed at"
    MSG_END="done"
    MSG_SELFUP_CURRENT="current binary"
    MSG_SELFUP_UPDATED="updated binary"
    MSG_SELFUP_UP="updating"
  ;;
esac

BIN_PATH="/usr/bin"
CONFIG_PATH="${HOME}/.config"

case ${CONFIG_DOTS_REPO} in "") echo ${MSG_ERROR}; exit 1 ;; esac

go() {
  cd ${CONFIG_DOTS_REPO}

  printf "[linkie] ${MSG_PUSH}... "
  git add *
  if git commit -m ${MSG_PUSH_GIT} \
    > /dev/null 2>&1; then git push > /dev/null 2>&1; echo ${MSG_END}; else
      echo ${MSG_PUSH_FAIL}
  fi

  printf "[linkie] ${MSG_RELINK}... "

  for SYM in `find $PWD -maxdepth 1 -not -name "*.git*" -and -not -path "$PWD" | sed "s|$PWD||g"`; do
    ORIGIN="${CONFIG_DOTS_REPO}/${SYM}"; DEST="${CONFIG_PATH}/${SYM}"
    rm -rf ${DEST} || true; ln -sf ${ORIGIN} ${DEST} || { echo "${MSG_RELINK_FAIL} ${ORIGIN}" && exit 1; }
  done

  echo "${MSG_END}"
}

selfup() {
  if which sudo > /dev/null 2>&1; then SOUP=sudo; else SOUP=""; fi
  printf "${MSG_SELFUP_CURRENT}: `ls -l ${BIN_PATH}/linkie`\n${MSG_SELFUP_UP}... "
  ${SOUP} su -c "curl -sL https://github.com/draumaz/linkie/archive/refs/heads/main.tar.gz | \
    tar -xpzf - \
      --strip-components=1 \
      -C ${BIN_PATH} \
      linkie-main/linkie"
  printf "${MSG_END}\n${MSG_SELFUP_UPDATED}: `ls -l ${BIN_PATH}/linkie`\n"
}

case $1 in
  selfup) selfup ;;
  *) go ;;
esac
